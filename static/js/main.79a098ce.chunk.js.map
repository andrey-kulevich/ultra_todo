{"version":3,"sources":["helpers/routes.ts","context/TodosContext.ts","components/Header.tsx","containers/PageContainer.tsx","helpers/utils.tsx","components/Todo.tsx","hooks/useSnackbar.tsx","components/CreateTodoMW.tsx","pages/TodosPage.tsx","components/TodosStatisticChart.tsx","pages/DoneTodosPage.tsx","App.tsx","hooks/useRoutes.tsx","reportWebVitals.ts","index.tsx"],"names":["routes","TodosContext","createContext","TodosProvider","Provider","useTodos","useContext","useStyles","makeStyles","theme","createStyles","root","flexGrow","title","cursor","marginRight","spacing","icon","width","height","input","display","Header","classes","history","useHistory","matches","useMediaQuery","dark","switchTheme","setNewTodos","AppBar","position","Toolbar","Typography","variant","className","onClick","push","Button","accept","onChange","event","reader","FileReader","target","files","readAsText","onload","e","readyState","DONE","result","Error","JSON","parse","id","type","htmlFor","component","Tooltip","IconButton","backgroundColor","palette","secondary","main","minHeight","container","paddingTop","paddingBottom","PageContainer","children","Container","getCurrentDate","Date","getFullYear","getMonth","toString","padStart","getDate","daysBetween","firstDate","secondDate","days","getTime","Math","floor","primary","borderRadius","transition","minWidth","marginTop","veryUrgentColor","urgentlyColor","mediumUrgencyColor","doNotRushColor","fontSize","pos","marginBottom","line","border","content","header","listPadding","paddingLeft","Todo","todo","updateTodo","removeTodo","markTodoAsDone","switchTodoUrgency","useState","anchorEl","setAnchorEl","edit","setEdit","setTitle","setContent","openCollapse","setOpenCollapse","useEffect","handleSwitchUrgency","value","Card","isDone","urgency","defineCardColor","CardHeader","action","aria-label","aria-controls","currentTarget","TextField","fullWidth","label","subheader","lastModifiedDate","CardContent","multiline","split","map","elem","index","CardActions","Menu","keepMounted","open","Boolean","onClose","MenuItem","List","ListItem","Collapse","in","timeout","unmountOnExit","disablePadding","button","Alert","props","elevation","Transition","React","forwardRef","ref","Slide","direction","CreateTodoMW","setOpen","message","setMessage","severity","setSeverity","handleClose","reason","openSnack","useCallback","customSeverity","customMessage","snack","Snackbar","autoHideDuration","useSnackBar","todos","addTodo","setUrgency","Dialog","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle","DialogContent","FormControl","required","InputLabel","Select","labelId","DialogActions","max","apply","formControl","color","text","fab","noTodosMessage","TodosPage","view","setView","filteredTodos","setFilteredTodos","filter","Grid","Fab","size","length","align","chartPaper","padding","TodosStatisticChart","reducedData","setReducedData","createChartData","tempTodos","forEach","slice","done","reduce","res","chartData","labels","datasets","fill","lineTension","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","data","Paper","options","responsive","maintainAspectRatio","scales","yAxes","ticks","suggestedMin","DoneTodosPage","App","fallback","path","to","update","setUpdate","setTodos","setDark","createMuiTheme","success","error","localStorage","getItem","ThemeProvider","setItem","unshift","oldTodos","stringify","splice","findIndex","newTodos","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAAaA,EACI,UADJA,EAEE,Q,mLCCFC,EAAeC,wBAAqC,IACpDC,EAAgBF,EAAaG,SAC7BC,EAAW,kBAA8BC,qBAAWL,I,OCW3DM,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFC,SAAU,GAEdC,MAAO,CACHC,OAAQ,UACRC,YAAaN,EAAMO,QAAQ,GAC3B,uCAAyC,CACrCD,YAAaN,EAAMO,QAAQ,KAGnCC,KAAM,CACFC,MAAO,GACPC,OAAQ,IAEZC,MAAO,CACHC,QAAS,aAKN,SAASC,IACpB,IAAMC,EAAUhB,IACViB,EAAUC,cACVC,EAAUC,YAAc,qBAHD,EAIYtB,IAAlCuB,EAJsB,EAItBA,KAAMC,EAJgB,EAIhBA,YAAaC,EAJG,EAIHA,YAc1B,OACI,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAWb,EAAQV,MAClCwB,QAAS,kBAAMb,EAAQc,KAAKtC,IADxC,wBAIA,cAACuC,EAAA,EAAD,CAAQF,QAAS,kBAAMb,EAAQc,KAAKtC,IAApC,SACK0B,EAAU,mDAAa,cAAC,IAAD,CAAwBU,UAAWb,EAAQN,SAEvE,cAACsB,EAAA,EAAD,CAAQF,QAAS,kBAAMb,EAAQc,KAAKtC,IAApC,SACK0B,EAAU,qEAAgB,cAAC,IAAD,CAAsBU,UAAWb,EAAQN,SAGxE,uBACIuB,OAAO,mBACPJ,UAAWb,EAAQH,MACnBqB,SA7BQ,SAACC,GACrB,IAAIC,EAAS,IAAIC,WACbF,EAAMG,OAAOC,QACbH,EAAOI,WAAWL,EAAMG,OAAOC,MAAM,IACrCH,EAAOK,OAAS,SAACC,GACb,IAAIA,EAAEJ,QAAUI,EAAEJ,OAAOK,aAAeN,WAAWO,OAAQR,EAAOS,OAE7D,MAAM,IAAIC,MAAM,4BADjBvB,EAAYwB,KAAKC,MAAMZ,EAAOS,YAwB9BI,GAAG,cACHC,KAAK,SAET,uBAAOC,QAAQ,cAAf,SACI,cAACnB,EAAA,EAAD,CAAQoB,UAAU,OAAlB,SACKjC,EAAU,yDAAc,cAAC,IAAD,CAAgBU,UAAWb,EAAQN,WAIpE,cAAC2C,EAAA,EAAD,CAAS/C,MAAO,sEAAhB,SACI,cAACgD,EAAA,EAAD,CAAYxB,QAAS,kBAAMR,KAA3B,SACKD,EACG,cAAC,IAAD,CAAiBQ,UAAWb,EAAQN,OAEpC,cAAC,IAAD,CAAiBmB,UAAWb,EAAQN,gBCnFhE,IAAMV,EAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACFmD,gBAAiBrD,EAAMsD,QAAQC,UAAUC,KACzCC,UAAW,QACXhD,MAAO,QAEXiD,UAAW,CACPC,WAAY,MACZC,cAAe,YAKdC,EAAgB,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,SACrBhD,EAAUhB,IAChB,OACI,sBAAK6B,UAAWb,EAAQZ,KAAxB,UACI,cAACW,EAAD,IACA,cAACkD,EAAA,EAAD,CAAWpC,UAAWb,EAAQ4C,UAA9B,SACKI,Q,uMCzBJE,GAAiB,WAC1B,OAAO,IAAIC,MAAOC,cAAgB,MAC7B,IAAID,MAAOE,WAAa,GAAGC,WAAWC,SAAS,EAAG,KAAO,KAC1D,IAAIJ,MAAOK,UAAUF,WAAWC,SAAS,EAAG,MAGvCE,GAAc,SAACC,EAAmBC,GAC3C,IAEIC,GADgB,IAAIT,KAAKQ,GAAYE,UAAY,IAAIV,KAAKO,GAAWG,WADhD,MAGzB,OAAOC,KAAKC,MAAMH,ICahB5E,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTC,KAAM,CACF,UAAW,CACPmD,gBAAiBrD,EAAMsD,QAAQwB,QAAQtB,KACvCuB,aAAc,OACdC,WAAY,6CAEhBC,SAAU,IACVC,UAAWlF,EAAMO,QAAQ,GACzBwE,aAAc,MACdC,WAAY,6CAEhBG,gBAAiB,CACb9B,gBAAiB,uBAErB+B,cAAe,CACX/B,gBAAiB,wBAErBgC,mBAAoB,CAChBhC,gBAAiB,wBAErBiC,eAAgB,CACZjC,gBAAiBrD,EAAMsD,QAAQC,UAAUC,MAE7CpD,MAAO,CACHmF,SAAU,IAEdC,IAAK,CACDC,aAAc,IAElBC,KAAM,CACFhF,OAAQ,MACR2C,gBAAiB,qBACjBsC,OAAQ,QAEZC,QAAS,CACLjC,WAAY,GAEhBkC,OAAQ,CACJjC,cAAe,GAEnBkC,YAAa,CACTC,YAAa,EACbpC,WAAY,EACZC,cAAe,QAKdoC,GAAO,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,KACZnF,EAAUhB,KADoC,EAEgBF,IAA7DsG,EAF6C,EAE7CA,WAAYC,EAFiC,EAEjCA,WAAYC,EAFqB,EAErBA,eAAgBC,EAFK,EAELA,kBAFK,EAIpBC,mBAA6B,MAJT,mBAI7CC,EAJ6C,KAInCC,EAJmC,OAK5BF,oBAAkB,GALU,mBAK7CG,EAL6C,KAKvCC,EALuC,OAM1BJ,mBAAiBL,EAAK7F,OANI,mBAM7CA,EAN6C,KAMtCuG,EANsC,OAOtBL,mBAAiBL,EAAKL,SAPA,mBAO7CA,EAP6C,KAOpCgB,EAPoC,OAQZN,oBAAS,GARG,mBAQ7CO,EAR6C,KAQ/BC,EAR+B,KAUpDC,qBAAU,WACNJ,EAASV,EAAK7F,OACdwG,EAAWX,EAAKL,WACjB,CAACK,IAEJ,IAKMe,EAAsB,SAACC,GACzBZ,EAAkBJ,EAAKlD,GAAIkE,GAC3BT,EAAY,OAgChB,OACI,qCACI,eAACU,EAAA,EAAD,CAAMvF,UAAWb,EAAQZ,KAAO,IAjBhB,WACpB,GAAK+F,EAAKkB,OAWH,OAAOrG,EAAQwE,eAVlB,OAAQW,EAAKmB,SACT,IAAK,cACD,OAAOtG,EAAQqE,gBACnB,IAAK,WACD,OAAOrE,EAAQsE,cACnB,IAAK,iBACD,OAAOtE,EAAQuE,mBACnB,QACI,OAAOvE,EAAQwE,gBAOe+B,GAAmB3F,QAAQ,WAAjE,UACI,cAAC4F,EAAA,EAAD,CACI3F,UAAWb,EAAQ+E,OACnB0B,OACI,sCACMtB,EAAKkB,QACH,qCACI,cAAChE,EAAA,EAAD,CAAS/C,MAAO,yIAAhB,SACI,cAACgD,EAAA,EAAD,CAAYoE,aAAW,WAAW5F,QAAS,kBAAMwE,EAAeH,EAAKlD,KAArE,SACI,cAAC,KAAD,QAGR,cAACK,EAAA,EAAD,CACIoE,aAAW,WACXC,gBAAc,gBACd7F,QAAS,SAACY,GAAD,OACLgE,EAAYhE,EAAEkF,gBAJtB,SAMI,cAAC,KAAD,SAIZ,cAACtE,EAAA,EAAD,CAAYoE,aAAW,WAAW5F,QAAS,kBAAMuE,EAAWF,EAAKlD,KAAjE,SACI,cAAC,KAAD,SAIZ3C,MAAOqG,EACH,mCACI,cAACkB,EAAA,EAAD,CACIC,WAAS,EACT7E,GAAG,aACH8E,MAAM,yDACNZ,MAAO7G,EACP4B,SAAU,SAACQ,GAAD,OACNmE,EAASnE,EAAEJ,OAAO6E,YAG5BhB,EAAK7F,MACX0H,WAAYrB,GAAQR,EAAK8B,mBAE7B,cAACC,EAAA,EAAD,CAAarG,UAAWb,EAAQ8E,QAAhC,SACKa,EACG,cAACkB,EAAA,EAAD,CACIC,WAAS,EACTK,WAAS,EACTlF,GAAG,eACH8E,MAAM,mDACNZ,MAAOrB,EACP5D,SAAU,SAACQ,GAAD,OACNoE,EAAWpE,EAAEJ,OAAO6E,UAG5BhB,EAAKL,SACL,qCACI,oBAAIjE,UAAWb,EAAQ4E,OACtBO,EAAKL,QAAQsC,MAAM,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC1B,cAAC5G,EAAA,EAAD,CAAaC,QAAQ,QAAQwB,UAAU,IAAvC,SAAwDkF,GAARC,WAM/D5B,GACG,eAAC6B,EAAA,EAAD,WACI,cAACxG,EAAA,EAAD,CAAQF,QAhGT,WACXxB,IAAU6F,EAAK7F,OAASwF,IAAYK,EAAKL,SACzCM,EAAWD,EAAKlD,GAAI,CAChBA,GAAIkD,EAAKlD,GACT3C,MAAOA,EACPwF,QAASA,EACTmC,iBAAkB/D,KAClBoD,QAASnB,EAAKmB,QACdD,QAAQ,IAGhBT,GAAQ,IAqFQ,oEACA,cAAC5E,EAAA,EAAD,CAAQF,QAAS,kBAAM8E,GAAQ,IAA/B,wDAIZ,eAAC6B,EAAA,EAAD,CACIxF,GAAG,gBACHwD,SAAUA,EACViC,aAAW,EACXC,KAAMC,QAAQnC,GACdoC,QAAS,WACLnC,EAAY,MACZM,GAAgB,IAPxB,UAUI,cAAC8B,EAAA,EAAD,CAAUhH,QAzHH,WACf8E,GAAQ,GACRF,EAAY,OAuHJ,8DACA,cAACoC,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAMlH,UAAWb,EAAQgF,YAAzB,UACI,cAACgD,EAAA,EAAD,CAAUnH,UAAWb,EAAQgF,YAAalE,QAAS,kBAAMkF,GAAgB,IAAzE,oEAGA,cAACiC,GAAA,EAAD,CAAUC,GAAInC,EAAcoC,QAAQ,OAAOC,eAAa,EAAxD,SACI,eAACL,EAAA,EAAD,CAAM3F,UAAU,MAAMiG,gBAAc,EAApC,UACI,cAACL,EAAA,EAAD,CAAUM,QAAM,EAACxH,QAAS,kBAAMoF,EAAoB,gBAApD,iFAGA,cAAC8B,EAAA,EAAD,CAAUM,QAAM,EAACxH,QAAS,kBAAMoF,EAAoB,aAApD,kDAGA,cAAC8B,EAAA,EAAD,CAAUM,QAAM,EAACxH,QAAS,kBAAMoF,EAAoB,mBAApD,+GAGA,cAAC8B,EAAA,EAAD,CAAUM,QAAM,EAACxH,QAAS,kBAAMoF,EAAoB,gBAApD,gF,oGC9NhC,SAASqC,GAAMC,GACX,OAAO,cAAC,KAAD,cAAUC,UAAW,EAAG7H,QAAQ,UAAa4H,ICSxD,IAAME,GAAaC,IAAMC,YAAW,SAChCJ,EACAK,GAEA,OAAO,cAACC,GAAA,EAAD,cAAOC,UAAU,KAAKF,IAAKA,GAASL,OAGlCQ,GAAe,SAAC,GAAqD,IAApDrB,EAAmD,EAAnDA,KAAME,EAA6C,EAA7CA,QAA6C,EDblE,WAAwB,IAAD,EACVc,IAAMnD,UAAS,GADL,mBAC3BmC,EAD2B,KACrBsB,EADqB,OAEJN,IAAMnD,SAAS,IAFX,mBAE3B0D,EAF2B,KAElBC,EAFkB,OAGFR,IAAMnD,SAAmD,WAHvD,mBAG3B4D,EAH2B,KAGjBC,EAHiB,KAK5BC,EAAc,SAACnI,EAA8BoI,GAChC,cAAXA,GACJN,GAAQ,IAGNO,EAAYC,uBAAY,SAACC,EACAC,GAC3BV,GAAQ,GACRE,EAAWQ,GACXN,EAAYK,KACd,IAUF,MAAO,CAACE,MAPJ,cAACC,GAAA,EAAD,CAAUlC,KAAMA,EAAMmC,iBAAkB,IAAMjC,QAASyB,EAAvD,SACI,cAAC,GAAD,CAAOzB,QAASyB,EAAaF,SAAUA,EAAvC,SACKF,MAKEM,aCXYO,GAApBH,EADsE,EACtEA,MAAOJ,EAD+D,EAC/DA,UAD+D,EAEpD1K,IAAlBkL,EAFsE,EAEtEA,MAAOC,EAF+D,EAE/DA,QAF+D,EAGnDzE,mBAAiB,IAHkC,mBAGtElG,EAHsE,KAG/DuG,EAH+D,OAI/CL,mBAAiB,IAJ8B,mBAItEV,EAJsE,KAI7DgB,EAJ6D,OAK/CN,mBAAiB,eAL8B,mBAKtEc,EALsE,KAK7D4D,EAL6D,KAuB7E,OACI,eAACC,GAAA,EAAD,CACIxC,KAAMA,EACNb,WAAS,EACTsD,oBAAqB1B,GACrBhB,aAAW,EACXG,QAAS,kBAAMA,KACfwC,kBAAgB,2BAChBC,mBAAiB,iCAPrB,UASI,cAACC,GAAA,EAAD,CAAatI,GAAG,2BAAhB,mGACA,cAACuI,GAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAa3D,WAAS,EAAtB,UACI,cAACD,EAAA,EAAD,CACI6D,UAAQ,EACR5D,WAAS,EACT7E,GAAG,aACH8E,MAAM,yDACNZ,MAAO7G,EACP4B,SAAU,SAACQ,GAAD,OACNmE,EAASnE,EAAEJ,OAAO6E,UAE1B,cAACU,EAAA,EAAD,CACIC,WAAS,EACTK,WAAS,EACTlF,GAAG,eACH8E,MAAM,mDACNZ,MAAOrB,EACP5D,SAAU,SAACQ,GAAD,OACNoE,EAAWpE,EAAEJ,OAAO6E,UAE5B,eAACsE,EAAA,EAAD,CAAa3D,WAAS,EAAtB,UACI,cAAC6D,EAAA,EAAD,CAAY1I,GAAG,oBAAf,yGACA,eAAC2I,EAAA,EAAD,CACIC,QAAQ,oBACR5I,GAAG,eACHkE,MAAOG,EACPpF,SAAU,SAACQ,GAAD,OAAOwI,EAAWxI,EAAEJ,OAAO6E,QAJzC,UAMI,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,cAAjB,iFACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,WAAjB,kDACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,iBAAjB,+GACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,cAAjB,0EAKhB,eAAC2E,GAAA,EAAD,WACI,cAAC9J,EAAA,EAAD,CAAQF,QAAS,kBAAM+G,KAAvB,kDAGA,cAAC7G,EAAA,EAAD,CAAQF,QAnEC,WACH,KAAVxB,EACAkK,EAAU,QAAS,yMAEnBS,EAAQ,CACJhI,GAAI6B,KAAKiH,IAAIC,MAAMlH,KAAMkG,EAAM3C,KAAI,SAACC,GAAW,OAAOA,EAAKrF,OAAS,EACpE3C,MAAOA,EACPwF,QAASA,EACTmC,iBAAkB/D,KAClBoD,QAASA,EACTD,QAAQ,IAEZwB,MAuDI,iEAKH+B,MCzFP5K,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTO,KAAM,CACFC,MAAO,GACPC,OAAQ,IAEZqL,YAAa,CACT9G,SAAU,KAEd7E,MAAO,CACHE,YAAaN,EAAMO,QAAQ,GAC3B2E,UAAWlF,EAAMO,QAAQ,GACzByL,MAAOhM,EAAMsD,QAAQ2I,KAAKnH,SAE9BoH,IAAK,CACD5L,YAAaN,EAAMO,QAAQ,GAC3B2E,UAAWlF,EAAMO,QAAQ,KAE7B4L,eAAgB,CACZjH,UAAWlF,EAAMO,QAAQ,SAKxB6L,GAAY,WACrB,IAAMtL,EAAUhB,KACTgL,EAASlL,IAATkL,MAFoB,EAGHxE,mBAAiB,GAHd,mBAGpB+F,EAHoB,KAGdC,EAHc,OAIHhG,oBAAS,GAJN,mBAIpBmC,EAJoB,KAIdsB,EAJc,OAKezD,mBAA0B,IALzC,mBAKpBiG,EALoB,KAKLC,EALK,KAe3B,OARAzF,qBAAU,WACNyF,EAA0B,IAATH,EAAavB,EAAM2B,QAAO,SAAArE,GAAI,OAAKA,EAAKjB,UAC5C,IAATkF,EAAavB,EAAM2B,QAAO,SAAArE,GAAI,OAAKA,EAAKjB,QACpC5C,GAAY6D,EAAKL,iBAAkB/D,MAAoB,KACvD8G,EAAM2B,QAAO,SAAArE,GAAI,OAAKA,EAAKjB,QAAUiB,EAAKL,iBAAiBG,MAAM,KAAK,OACjE,IAAIjE,MAAOE,WAAa,GAAGC,WAAWC,SAAS,EAAG,WAChE,CAACgI,EAAMvB,IAGN,eAAC,EAAD,WACI,eAAC4B,EAAA,EAAD,CAAMhJ,WAAS,EAACmG,UAAW,MAA3B,UACI,cAACpI,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAWb,EAAQV,MAA9C,mGACA,cAACuM,EAAA,EAAD,CAAKC,KAAK,QACLZ,MAAM,UACNrK,UAAWb,EAAQoL,IACnB1E,aAAW,MACX5F,QAAS,kBAAMmI,GAAQ,IAJ5B,SAMI,cAAC,KAAD,MAEJ,eAACwB,EAAA,EAAD,CAAa5J,UAAWb,EAAQiL,YAAhC,UACI,cAACN,EAAA,EAAD,CAAY1I,GAAG,oBAAf,kDACA,eAAC2I,EAAA,EAAD,CACIC,QAAQ,oBACR5I,GAAG,eACHkE,MAAOoF,EACPrK,SAAU,SAACQ,GAAD,OAAO8J,EAAQ9J,EAAEJ,OAAO6E,QAJtC,UAMI,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,gCACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,+DACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,kEAIXsF,EAAcM,OAAS,EACpBN,EAAcpE,KAAI,SAACC,EAAMC,GAAP,OACV,cAAC,GAAD,CAAkBpC,KAAMmC,GAAbC,MAGnB,cAAC5G,EAAA,EAAD,CAAYC,QAAS,KAAMoL,MAAO,SAAUnL,UAAWb,EAAQqL,eAA/D,2KAKJ,cAAC,GAAD,CAAc1D,KAAMA,EAAME,QAAS,kBAAMoB,GAAQ,U,oBChFvDjK,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACT8M,WAAY,CACR7H,UAAWlF,EAAMO,QAAQ,GACzByM,QAAShN,EAAMO,QAAQ,GACvBkD,UAAW,UAKVwJ,GAAsB,WAE/B,IAAMnM,EAAUhB,KACTgL,EAASlL,IAATkL,MAH8B,EAICxE,mBAA6C,IAJ9C,mBAI9B4G,EAJ8B,KAIjBC,EAJiB,KAMrCpG,qBAAU,WACNoG,EAAeC,OACjB,CAACtC,IAEH,IAAMsC,EAAkB,WACpB,IAAIC,EAAgD,GACpDvC,EAAMwC,SAAQ,SAAAlF,GACViF,EAAUxL,KAAK,CACXgG,MAAOO,EAAKL,iBAAiBwF,MAAM,EAAG,GACtCC,KAAMpF,EAAKjB,OAAS,EAAI,OAIhC,IAAIxE,EAA6C,GAejD,OAbA0K,EAAUI,QAAO,SAASC,EAAKzG,GAU3B,OARMyG,EAAIzG,EAAMY,SAEZ6F,EAAIzG,EAAMY,OAAS,CAAEA,MAAOZ,EAAMY,MAAO2F,KAAM,GAE/C7K,EAAOd,KAAK6L,EAAIzG,EAAMY,SAG1B6F,EAAIzG,EAAMY,OAAO2F,MAAQvG,EAAMuG,KACxBE,IACR,IAEI/K,GAeLgL,EAAY,CACdC,OAAQV,EAAY/E,KAAI,SAAAC,GAAI,OAAIA,EAAKP,SACrCgG,SAAU,CACN,CACIhG,MAAO,2JACPiG,MAAM,EACNC,YAAa,GACb1K,gBAAiB,mBACjB2K,YAAa,iBACbC,eAAgB,OAChBC,WAAY,GACZC,iBAAkB,EAClBC,gBAAiB,QACjBC,iBAAkB,EAClBC,iBAAkB,EAClBC,0BAA2B,kBAC3BC,sBAAuB,kBACvBC,sBAAuB,EACvBC,YAAa,EACbC,eAAgB,GAChBC,KAAM1B,EAAY/E,KAAI,SAAAC,GAAI,OAAIA,EAAKoF,WAK/C,OACI,cAACqB,GAAA,EAAD,CAAOtF,UAAW,EAAG5H,UAAWb,EAAQiM,WAAxC,SACI,cAAC,OAAD,CAAK6B,KAAMjB,EAAWmB,QAvCd,CACZC,YAAY,EACZC,qBAAqB,EACrBC,OAAQ,CACJC,MAAO,CAAC,CACJC,MAAO,CACHC,aAAc,YCjD5BtP,GAAYC,aAAW,SAACC,GAAD,OACzBC,YAAa,CACTO,KAAM,CACFC,MAAO,GACPC,OAAQ,IAEZqL,YAAa,CACT9G,SAAU,KAEd7E,MAAO,CACHE,YAAaN,EAAMO,QAAQ,GAC3B2E,UAAWlF,EAAMO,QAAQ,GACzByL,MAAOhM,EAAMsD,QAAQ2I,KAAKnH,SAE9BqH,eAAgB,CACZjH,UAAWlF,EAAMO,QAAQ,IAE7B2L,IAAK,CACD5L,YAAaN,EAAMO,QAAQ,GAC3B2E,UAAWlF,EAAMO,QAAQ,UAKxB8O,GAAgB,WACzB,IAAMvO,EAAUhB,KACTgL,EAASlL,IAATkL,MAFwB,EAGPxE,mBAAiB,GAHV,mBAGxB+F,EAHwB,KAGlBC,EAHkB,OAIWhG,mBAA0B,IAJrC,mBAIxBiG,EAJwB,KAITC,EAJS,KAc/B,OARAzF,qBAAU,WACNyF,EAA0B,IAATH,EAAavB,EAAM2B,QAAO,SAAArE,GAAI,OAAIA,EAAKjB,UAC3C,IAATkF,EAAavB,EAAM2B,QAAO,SAAArE,GAAI,OAAIA,EAAKjB,QACnC5C,GAAY6D,EAAKL,iBAAkB/D,MAAoB,KACvD8G,EAAM2B,QAAO,SAAArE,GAAI,OAAIA,EAAKjB,QAAUiB,EAAKL,iBAAiBG,MAAM,KAAK,OAChE,IAAIjE,MAAOE,WAAa,GAAGC,WAAWC,SAAS,EAAG,WAChE,CAACgI,EAAMvB,IAGN,eAAC,EAAD,WACI,eAAC4B,EAAA,EAAD,CAAMhJ,WAAS,EAACmG,UAAW,MAA3B,UACI,cAACpI,EAAA,EAAD,CAAYC,QAAS,KAAMC,UAAWb,EAAQV,MAA9C,qHACA,eAACmL,EAAA,EAAD,CAAa5J,UAAWb,EAAQiL,YAAhC,UACI,cAACN,EAAA,EAAD,CAAY1I,GAAG,oBAAf,kDACA,eAAC2I,EAAA,EAAD,CACIC,QAAQ,oBACR5I,GAAG,eACHkE,MAAOoF,EACPrK,SAAU,SAACQ,GAAD,OAAO8J,EAAQ9J,EAAEJ,OAAO6E,QAJtC,UAMI,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,gCACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,+DACA,cAAC2B,EAAA,EAAD,CAAU3B,MAAO,EAAjB,kEAIZ,cAAC,GAAD,IACCsF,EAAcM,OAAS,EACpBN,EAAcpE,KAAI,SAACC,EAAMC,GAAP,OACd,cAAC,GAAD,CAAkBpC,KAAMmC,GAAbC,MAGf,cAAC5G,EAAA,EAAD,CAAYC,QAAS,KAAMoL,MAAO,SAAUnL,UAAWb,EAAQqL,eAA/D,sI,oBC/DD,SAASmD,KACpB,IAAM/P,GCDNwH,qBAAU,cAER,IAGE,cAAC,IAAD,UACI,eAAC,WAAD,CAAUwI,SAAU,+CAApB,UAKY,cAAC,IAAD,CAAOC,KAAMjQ,EAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOiQ,KAAMjQ,EAAb,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAUkQ,GAAIlQ,UDjBR,EAGE+G,oBAAkB,GAHpB,mBAGnBoJ,EAHmB,KAGXC,EAHW,OAIArJ,mBAA0B,IAJ1B,mBAInBwE,EAJmB,KAIZ8E,EAJY,OAKFtJ,oBAAkB,GALhB,mBAKnBnF,EALmB,KAKb0O,EALa,KAOpB7P,EAAQ8P,aAAe,CACzBxM,QAAS,CACLN,KAAM7B,EAAO,OAAS,QACtB2D,QAAS,CAAEtB,KAAMrC,EAAO,UAAY,WACpCoC,UAAW,CAAEC,KAAMrC,EAAO,UAAY,QACtC4O,QAAS,CAAEvM,KAAM,WACjBwM,MAAO,CAAExM,KAAM,cAIvBuD,qBAAU,WACFkJ,aAAaC,QAAQ,UACrBN,EAAS/M,KAAKC,MAAMmN,aAAaC,QAAQ,WACzCD,aAAaC,QAAQ,SACrBL,EAAyC,SAAjCI,aAAaC,QAAQ,SACjCP,GAAU,KACZ,CAACD,IA0EH,OACI,cAACS,GAAA,EAAD,CAAenQ,MAAOA,EAAtB,SACI,cAAC,IAAD,UACI,cAACN,EAAD,CAAeuH,MAAO,CAClB6D,QAAO3J,OACPC,YA7EI,WAChB6O,aAAaG,QAAQ,OAAQjP,EAAO,QAAU,QAC9C0O,GAAS1O,IA2EgB4J,QAxEb,SAAC9E,GACb2J,GAAS,SAAC9E,GAEN,OADAA,EAAMuF,QAAQpK,GACP6E,KAEX,IAAIwF,EAAWzN,KAAKC,MAAMmN,aAAaC,QAAQ,UAC3CI,EAAUA,EAASD,QAAQpK,GAC1BqK,EAAW,CAACrK,GACjBgK,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUD,IAC7CX,GAAU,IA+DwBxJ,WA5DnB,SAACpD,GAChB6M,GAAS,SAAC9E,GAEN,OADAA,EAAM0F,OAAO1F,EAAM2F,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,KAAK,GAC/C+H,KAGX,IAAIwF,EAAWzN,KAAKC,MAAMmN,aAAaC,QAAQ,UAC/CI,EAASE,OAAOF,EAASG,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,KAAK,GAC5DkN,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUD,IAC7CX,GAAU,IAmDoCtO,YAhD9B,SAACqP,GACjBd,EAASc,GACTT,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUG,KA+CjCxK,WA5CG,SAACnD,EAAakD,GAC7B2J,GAAS,SAAC9E,GAGN,OAFAA,EAAM0F,OAAO1F,EAAM2F,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,KAAK,GACtD+H,EAAMuF,QAAQpK,GACP6E,KAGX,IAAIwF,EAAWzN,KAAKC,MAAMmN,aAAaC,QAAQ,UAC/CI,EAASE,OAAOF,EAASG,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,KAAK,GAC5DuN,EAASD,QAAQpK,GACjBgK,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUD,IAC7CX,GAAU,IAiCcvJ,eA9BL,SAACrD,GACpB6M,GAAS,SAAC9E,GAEN,OADAA,EAAMA,EAAM2F,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,MAAKoE,QAAS,EACjD2D,KAGX,IAAIwF,EAAWzN,KAAKC,MAAMmN,aAAaC,QAAQ,UAC/CI,EAASA,EAASG,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,MAAKoE,QAAS,EAC9D8I,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUD,IAC7CX,GAAU,IAqB8BtJ,kBAlBlB,SAACtD,EAAYkE,GACnC2I,GAAS,SAAC9E,GAEN,OADAA,EAAMA,EAAM2F,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,MAAKqE,QAAUH,EAClD6D,KAGX,IAAIwF,EAAWzN,KAAKC,MAAMmN,aAAaC,QAAQ,UAC/CI,EAASA,EAASG,WAAU,SAAArI,GAAI,OAAIA,EAAKrF,KAAOA,MAAKqE,QAAUH,EAC/DgJ,aAAaG,QAAQ,QAASvN,KAAK0N,UAAUD,IAC7CX,GAAU,KAMF,SAIKpQ,QE/GrB,IAYeoR,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.79a098ce.chunk.js","sourcesContent":["export const routes = {\r\n    activeTodos: '/active',\r\n    doneTodos: '/done'\r\n}\r\n","import {createContext, useContext} from \"react\";\r\nimport {TodosHandlerInterface} from \"../interfaces/TodosHandlerInterface\";\r\n\r\nexport const TodosContext = createContext<TodosHandlerInterface>({} as TodosHandlerInterface)\r\nexport const TodosProvider = TodosContext.Provider\r\nexport const useTodos = () : TodosHandlerInterface => useContext(TodosContext)\r\n","import React, {ChangeEvent} from 'react';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {Button, IconButton, useMediaQuery, Tooltip} from \"@material-ui/core\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {routes} from \"../helpers/routes\";\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport FolderOpenIcon from '@material-ui/icons/FolderOpen';\r\nimport PlaylistAddCheckIcon from '@material-ui/icons/PlaylistAddCheck';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport {useTodos} from \"../context/TodosContext\";\r\nimport {TodoInterface} from \"../interfaces/TodoInterface\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        title: {\r\n            cursor: \"pointer\",\r\n            marginRight: theme.spacing(0),\r\n            '@media screen and (min-width: 900px)' : {\r\n                marginRight: theme.spacing(2)\r\n            }\r\n        },\r\n        icon: {\r\n            width: 30,\r\n            height: 30,\r\n        },\r\n        input: {\r\n            display: 'none',\r\n        },\r\n    }),\r\n);\r\n\r\nexport default function Header() {\r\n    const classes = useStyles();\r\n    const history = useHistory()\r\n    const matches = useMediaQuery('(min-width:900px)')\r\n    const {dark, switchTheme, setNewTodos} = useTodos()\r\n\r\n    const getDataFromFile = (event : ChangeEvent<HTMLInputElement>) => {\r\n        let reader = new FileReader()\r\n        if (event.target.files) {\r\n            reader.readAsText(event.target.files[0])\r\n            reader.onload = (e) => {\r\n                if (e.target && e.target.readyState === FileReader.DONE && reader.result)\r\n                    setNewTodos(JSON.parse(reader.result as string) as TodoInterface[])\r\n                else throw new Error('failed to load json data')\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n                <Typography variant={'h6'} className={classes.title}\r\n                            onClick={() => history.push(routes.activeTodos)}>\r\n                    ULTRA TODO\r\n                </Typography>\r\n                <Button onClick={() => history.push(routes.activeTodos)}>\r\n                    {matches ? 'АКТИВНЫЕ' : <FormatListBulletedIcon className={classes.icon}/>}\r\n                </Button>\r\n                <Button onClick={() => history.push(routes.doneTodos)}>\r\n                    {matches ? 'ЗАВЕРШЕННЫЕ' : <PlaylistAddCheckIcon className={classes.icon}/>}\r\n                </Button>\r\n\r\n                <input\r\n                    accept=\"application/json\"\r\n                    className={classes.input}\r\n                    onChange={getDataFromFile}\r\n                    id=\"button-file\"\r\n                    type=\"file\"\r\n                />\r\n                <label htmlFor=\"button-file\">\r\n                    <Button component=\"span\">\r\n                        {matches ? 'ЗАГРУЗИТЬ' : <FolderOpenIcon className={classes.icon}/>}\r\n                    </Button>\r\n                </label>\r\n\r\n                <Tooltip title={'Сменить тему'}>\r\n                    <IconButton onClick={() => switchTheme()}>\r\n                        {dark ?\r\n                            <Brightness4Icon className={classes.icon}/>\r\n                            :\r\n                            <Brightness7Icon className={classes.icon}/>\r\n                        }\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {Container} from \"@material-ui/core\";\r\nimport Header from \"../components/Header\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            backgroundColor: theme.palette.secondary.main,\r\n            minHeight: '100vh',\r\n            width: '100%'\r\n        },\r\n        container: {\r\n            paddingTop: '1em',\r\n            paddingBottom: '1em',\r\n        }\r\n    }),\r\n);\r\n\r\nexport const PageContainer = ({children} : {children:any}) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <Header/>\r\n            <Container className={classes.container}>\r\n                {children}\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","export const getCurrentDate = () : string => {\r\n    return new Date().getFullYear() + '-' +\r\n        (new Date().getMonth() + 1).toString().padStart(2, '0') + '-' +\r\n        new Date().getDate().toString().padStart(2, '0')\r\n}\r\n\r\nexport const daysBetween = (firstDate: string, secondDate: string) : number => {\r\n    let millisecondsPerDay = 1000 * 60 * 60 * 24\r\n    let millisBetween = new Date(secondDate).getTime() - new Date(firstDate).getTime()\r\n    let days = millisBetween / millisecondsPerDay\r\n    return Math.floor(days)\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {createStyles, makeStyles, Theme} from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {\r\n    CardActions,\r\n    CardHeader,\r\n    IconButton,\r\n    Menu,\r\n    MenuItem,\r\n    Button,\r\n    TextField,\r\n    Collapse,\r\n    List, ListItem, Tooltip\r\n} from \"@material-ui/core\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport DoneIcon from '@material-ui/icons/Done';\r\nimport {TodoInterface} from \"../interfaces/TodoInterface\";\r\nimport {useTodos} from \"../context/TodosContext\";\r\nimport {getCurrentDate} from \"../helpers/utils\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        root: {\r\n            \"&:hover\": {\r\n                backgroundColor: theme.palette.primary.main,\r\n                borderRadius: '15px',\r\n                transition: 'background-color 0.5s, border-radius 0.7s'\r\n            },\r\n            minWidth: 275,\r\n            marginTop: theme.spacing(3),\r\n            borderRadius: '5px',\r\n            transition: 'background-color 0.5s, border-radius 0.7s'\r\n        },\r\n        veryUrgentColor: {\r\n            backgroundColor: 'rgba(255,83,83,0.2)',\r\n        },\r\n        urgentlyColor: {\r\n            backgroundColor: 'rgba(255,161,28,0.2)',\r\n        },\r\n        mediumUrgencyColor: {\r\n            backgroundColor: 'rgba(255,245,60,0.2)',\r\n        },\r\n        doNotRushColor: {\r\n            backgroundColor: theme.palette.secondary.main,\r\n        },\r\n        title: {\r\n            fontSize: 14,\r\n        },\r\n        pos: {\r\n            marginBottom: 12,\r\n        },\r\n        line: {\r\n            height: '1px',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.1)',\r\n            border: 'none'\r\n        },\r\n        content: {\r\n            paddingTop: 0\r\n        },\r\n        header: {\r\n            paddingBottom: 0\r\n        },\r\n        listPadding: {\r\n            paddingLeft: 0,\r\n            paddingTop: 0,\r\n            paddingBottom: 0\r\n        }\r\n    })\r\n);\r\n\r\nexport const Todo = ({todo} : {todo: TodoInterface}) => {\r\n    const classes = useStyles();\r\n    const {updateTodo, removeTodo, markTodoAsDone, switchTodoUrgency} = useTodos()\r\n\r\n    const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null)\r\n    const [edit, setEdit] = useState<boolean>(false)\r\n    const [title, setTitle] = useState<string>(todo.title)\r\n    const [content, setContent] = useState<string>(todo.content)\r\n    const [openCollapse, setOpenCollapse] = useState(false)\r\n\r\n    useEffect(() => {\r\n        setTitle(todo.title)\r\n        setContent(todo.content)\r\n    }, [todo])\r\n\r\n    const handleEdit = () => {\r\n        setEdit(true)\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const handleSwitchUrgency = (value: 'very urgent' | 'urgently' | 'medium urgency' | 'do not rush') => {\r\n        switchTodoUrgency(todo.id, value)\r\n        setAnchorEl(null)\r\n    }\r\n\r\n    const handleSave = () => {\r\n        if (title !== todo.title || content !== todo.content) {\r\n            updateTodo(todo.id, {\r\n                id: todo.id,\r\n                title: title,\r\n                content: content,\r\n                lastModifiedDate: getCurrentDate(),\r\n                urgency: todo.urgency,\r\n                isDone: false\r\n            } as TodoInterface)\r\n        }\r\n        setEdit(false)\r\n    }\r\n\r\n    const defineCardColor = () : string => {\r\n        if (!todo.isDone) {\r\n            switch (todo.urgency) {\r\n                case \"very urgent\":\r\n                    return classes.veryUrgentColor;\r\n                case \"urgently\":\r\n                    return classes.urgentlyColor;\r\n                case \"medium urgency\":\r\n                    return classes.mediumUrgencyColor;\r\n                default:\r\n                    return classes.doNotRushColor;\r\n            }\r\n        } else return classes.doNotRushColor;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Card className={classes.root + ' ' + defineCardColor()} variant=\"outlined\">\r\n                <CardHeader\r\n                    className={classes.header}\r\n                    action={\r\n                        <>\r\n                            {!todo.isDone &&\r\n                                <>\r\n                                    <Tooltip title={'Пометить как выполненную'}>\r\n                                        <IconButton aria-label=\"settings\" onClick={() => markTodoAsDone(todo.id)}>\r\n                                            <DoneIcon />\r\n                                        </IconButton>\r\n                                    </Tooltip>\r\n                                    <IconButton\r\n                                        aria-label=\"settings\"\r\n                                        aria-controls=\"settings-menu\"\r\n                                        onClick={(e) =>\r\n                                            setAnchorEl(e.currentTarget)}\r\n                                    >\r\n                                        <MoreVertIcon />\r\n                                    </IconButton>\r\n                                </>\r\n                            }\r\n                            <IconButton aria-label=\"settings\" onClick={() => removeTodo(todo.id)}>\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n                        </>\r\n                    }\r\n                    title={edit ?\r\n                        <>\r\n                            <TextField\r\n                                fullWidth\r\n                                id=\"titleField\"\r\n                                label=\"Заголовок\"\r\n                                value={title}\r\n                                onChange={(e) =>\r\n                                    setTitle(e.target.value)}\r\n                            />\r\n                        </>\r\n                        : todo.title}\r\n                    subheader={!edit && todo.lastModifiedDate}\r\n                />\r\n                <CardContent className={classes.content}>\r\n                    {edit ?\r\n                        <TextField\r\n                            fullWidth\r\n                            multiline\r\n                            id=\"contentField\"\r\n                            label=\"Описание\"\r\n                            value={content}\r\n                            onChange={(e) =>\r\n                                setContent(e.target.value)}\r\n                        />\r\n                        :\r\n                        todo.content &&\r\n                        <>\r\n                            <hr className={classes.line} />\r\n                            {todo.content.split('\\n').map((elem, index) => (\r\n                                <Typography  variant=\"body2\" component=\"p\" key={index}>{elem}</Typography>\r\n                            ))}\r\n                        </>\r\n                    }\r\n\r\n                </CardContent>\r\n                {edit &&\r\n                    <CardActions>\r\n                        <Button onClick={handleSave}>Сохранить</Button>\r\n                        <Button onClick={() => setEdit(false)}>Отмена</Button>\r\n                    </CardActions>\r\n                }\r\n            </Card>\r\n            <Menu\r\n                id=\"settings-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => {\r\n                    setAnchorEl(null)\r\n                    setOpenCollapse(false)\r\n                }}\r\n            >\r\n                <MenuItem onClick={handleEdit}>Изменить</MenuItem>\r\n                <MenuItem>\r\n                    <List className={classes.listPadding}>\r\n                        <ListItem className={classes.listPadding} onClick={() => setOpenCollapse(true)}>\r\n                            Срочность\r\n                        </ListItem>\r\n                        <Collapse in={openCollapse} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                                <ListItem button onClick={() => handleSwitchUrgency('very urgent')}>\r\n                                    Очень срочно\r\n                                </ListItem>\r\n                                <ListItem button onClick={() => handleSwitchUrgency('urgently')}>\r\n                                    Срочно\r\n                                </ListItem>\r\n                                <ListItem button onClick={() => handleSwitchUrgency('medium urgency')}>\r\n                                    Средняя срочность\r\n                                </ListItem>\r\n                                <ListItem button onClick={() => handleSwitchUrgency('do not rush')}>\r\n                                    Не срочно\r\n                                </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n\r\n                </MenuItem>\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import React, {useCallback} from 'react';\r\nimport {Snackbar} from '@material-ui/core';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport default function useSnackBar() {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [message, setMessage] = React.useState('')\r\n    const [severity, setSeverity] = React.useState<\"success\" | \"error\" | \"warning\" | \"info\">(\"success\" )\r\n\r\n    const handleClose = (event?: React.SyntheticEvent, reason?: string) => {\r\n        if (reason === 'clickaway') return\r\n        setOpen(false)\r\n    };\r\n\r\n    const openSnack = useCallback((customSeverity:\"success\" | \"error\" | \"warning\" | \"info\",\r\n                                   customMessage:string) => {\r\n        setOpen(true)\r\n        setMessage(customMessage)\r\n        setSeverity(customSeverity)\r\n    },[])\r\n\r\n    const snack = (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={severity}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n\r\n    return {snack, openSnack}\r\n}\r\n","import React, {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport { TransitionProps } from '@material-ui/core/transitions';\r\nimport {FormControl, InputLabel, MenuItem, Select, TextField} from \"@material-ui/core\";\r\nimport {TodoInterface} from \"../interfaces/TodoInterface\";\r\nimport useSnackBar from \"../hooks/useSnackbar\";\r\nimport {getCurrentDate} from \"../helpers/utils\";\r\nimport {useTodos} from \"../context/TodosContext\";\r\n\r\nconst Transition = React.forwardRef(function Transition(\r\n    props: TransitionProps & { children?: React.ReactElement<any, any> },\r\n    ref: React.Ref<unknown>,\r\n) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport const CreateTodoMW = ({open, onClose} : {open: boolean, onClose: any}) => {\r\n    const {snack, openSnack} = useSnackBar()\r\n    const {todos, addTodo} = useTodos()\r\n    const [title, setTitle] = useState<string>('')\r\n    const [content, setContent] = useState<string>('')\r\n    const [urgency, setUrgency] = useState<string>('do not rush')\r\n\r\n    const handleCreate = () => {\r\n        if (title === '') {\r\n            openSnack('error', 'Пожалуйста, введите заголовок задачи')\r\n        } else {\r\n            addTodo({\r\n                id: Math.max.apply(Math, todos.map((elem) => { return elem.id })) + 1,\r\n                title: title,\r\n                content: content,\r\n                lastModifiedDate: getCurrentDate(),\r\n                urgency: urgency,\r\n                isDone: false\r\n            } as TodoInterface)\r\n            onClose()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Dialog\r\n            open={open}\r\n            fullWidth\r\n            TransitionComponent={Transition}\r\n            keepMounted\r\n            onClose={() => onClose()}\r\n            aria-labelledby=\"alert-dialog-slide-title\"\r\n            aria-describedby=\"alert-dialog-slide-description\"\r\n        >\r\n            <DialogTitle id=\"alert-dialog-slide-title\">Добавить задачу</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth>\r\n                    <TextField\r\n                        required\r\n                        fullWidth\r\n                        id=\"titleField\"\r\n                        label=\"Заголовок\"\r\n                        value={title}\r\n                        onChange={(e) =>\r\n                            setTitle(e.target.value)}\r\n                    />\r\n                    <TextField\r\n                        fullWidth\r\n                        multiline\r\n                        id=\"contentField\"\r\n                        label=\"Описание\"\r\n                        value={content}\r\n                        onChange={(e) =>\r\n                            setContent(e.target.value)}\r\n                    />\r\n                    <FormControl fullWidth>\r\n                        <InputLabel id=\"selectPeriodLabel\">Срочность задачи</InputLabel>\r\n                        <Select\r\n                            labelId=\"selectPeriodLabel\"\r\n                            id=\"selectPeriod\"\r\n                            value={urgency}\r\n                            onChange={(e) => setUrgency(e.target.value as string)}\r\n                        >\r\n                            <MenuItem value={'very urgent'}>Очень срочно</MenuItem>\r\n                            <MenuItem value={'urgently'}>Срочно</MenuItem>\r\n                            <MenuItem value={'medium urgency'}>Средняя срочность</MenuItem>\r\n                            <MenuItem value={'do not rush'}>Не срочно</MenuItem>\r\n                        </Select>\r\n                    </FormControl>\r\n                </FormControl>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button onClick={() => onClose()}>\r\n                    Отмена\r\n                </Button>\r\n                <Button onClick={handleCreate}>\r\n                    Добавить\r\n                </Button>\r\n            </DialogActions>\r\n\r\n            {snack}\r\n\r\n        </Dialog>\r\n    );\r\n}\r\n","import {PageContainer} from \"../containers/PageContainer\";\r\nimport {Fab, FormControl, Grid, InputLabel, MenuItem, Select, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Todo} from \"../components/Todo\";\r\nimport {useTodos} from \"../context/TodosContext\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport {CreateTodoMW} from \"../components/CreateTodoMW\";\r\nimport {daysBetween, getCurrentDate} from \"../helpers/utils\";\r\nimport {TodoInterface} from \"../interfaces/TodoInterface\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        icon: {\r\n            width: 40,\r\n            height: 40,\r\n        },\r\n        formControl: {\r\n            minWidth: 100,\r\n        },\r\n        title: {\r\n            marginRight: theme.spacing(3),\r\n            marginTop: theme.spacing(1),\r\n            color: theme.palette.text.primary\r\n        },\r\n        fab: {\r\n            marginRight: theme.spacing(3),\r\n            marginTop: theme.spacing(0.5),\r\n        },\r\n        noTodosMessage: {\r\n            marginTop: theme.spacing(3),\r\n        }\r\n    }),\r\n);\r\n\r\nexport const TodosPage = () => {\r\n    const classes = useStyles();\r\n    const {todos} = useTodos()\r\n    const [view, setView] = useState<number>(1)\r\n    const [open, setOpen] = useState(false)\r\n    const [filteredTodos, setFilteredTodos] = useState<TodoInterface[]>([])\r\n\r\n    useEffect(() => {\r\n        setFilteredTodos(view === 1 ? todos.filter(elem => !elem.isDone) :\r\n            view === 2 ? todos.filter(elem => !elem.isDone &&\r\n                daysBetween(elem.lastModifiedDate, getCurrentDate()) < 7) :\r\n                todos.filter(elem => !elem.isDone && elem.lastModifiedDate.split('-')[1] ===\r\n                    (new Date().getMonth() + 1).toString().padStart(2, '0')))\r\n    }, [view, todos])\r\n\r\n    return(\r\n        <PageContainer>\r\n            <Grid container direction={\"row\"}>\r\n                <Typography variant={\"h5\"} className={classes.title}>Активные задачи</Typography>\r\n                <Fab size=\"small\"\r\n                     color=\"primary\"\r\n                     className={classes.fab}\r\n                     aria-label=\"add\"\r\n                     onClick={() => setOpen(true)}\r\n                >\r\n                    <AddIcon />\r\n                </Fab>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"selectPeriodLabel\">Период</InputLabel>\r\n                    <Select\r\n                        labelId=\"selectPeriodLabel\"\r\n                        id=\"selectPeriod\"\r\n                        value={view}\r\n                        onChange={(e) => setView(e.target.value as number)}\r\n                    >\r\n                        <MenuItem value={1}>Все</MenuItem>\r\n                        <MenuItem value={2}>За неделю</MenuItem>\r\n                        <MenuItem value={3}>За месяц</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            {filteredTodos.length > 0 ?\r\n                filteredTodos.map((elem, index) => (\r\n                        <Todo key={index} todo={elem}/>\r\n                ))\r\n                :\r\n                <Typography variant={\"h5\"} align={'center'} className={classes.noTodosMessage}>\r\n                    Не сиди без дела, добавь задачи!\r\n                </Typography>\r\n            }\r\n\r\n            <CreateTodoMW open={open} onClose={() => setOpen(false)}/>\r\n        </PageContainer>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport {Paper} from \"@material-ui/core\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {useTodos} from \"../context/TodosContext\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        chartPaper: {\r\n            marginTop: theme.spacing(3),\r\n            padding: theme.spacing(2),\r\n            minHeight: 300\r\n        }\r\n    }),\r\n);\r\n\r\nexport const TodosStatisticChart = () => {\r\n\r\n    const classes = useStyles()\r\n    const {todos} = useTodos()\r\n    const [reducedData, setReducedData] = useState<{ label: string; done: number; }[]>([])\r\n\r\n    useEffect(() => {\r\n        setReducedData(createChartData())\r\n    },[todos])\r\n\r\n    const createChartData = () => {\r\n        let tempTodos: { label: string; done: number; }[] = []\r\n        todos.forEach(elem => {\r\n            tempTodos.push({\r\n                label: elem.lastModifiedDate.slice(0, 7),\r\n                done: elem.isDone ? 1 : 0\r\n            })\r\n        })\r\n\r\n        let result: { label: string; done: number; }[] = []\r\n\r\n        tempTodos.reduce(function(res, value) {\r\n            // @ts-ignore\r\n            if ( !res[value.label]) {\r\n                // @ts-ignore\r\n                res[value.label] = { label: value.label, done: 0 }\r\n                // @ts-ignore\r\n                result.push(res[value.label])\r\n            }\r\n            // @ts-ignore\r\n            res[value.label].done += value.done\r\n            return res\r\n        }, {})\r\n\r\n        return result\r\n    }\r\n\r\n    const options = {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n            yAxes: [{\r\n                ticks: {\r\n                    suggestedMin: 0\r\n                }\r\n            }]\r\n        }\r\n    }\r\n\r\n    const chartData = {\r\n        labels: reducedData.map(elem => elem.label),\r\n        datasets: [\r\n            {\r\n                label: 'Статистика выполнения задач',\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: 'rgb(136,184,111)',\r\n                borderColor: 'rgb(84,141,56)',\r\n                borderCapStyle: 'butt',\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: 'miter',\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: 'rgb(138,252,78)',\r\n                pointHoverBorderColor: 'rgb(123,255,40)',\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: reducedData.map(elem => elem.done)\r\n            }\r\n        ]\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.chartPaper}>\r\n            <Bar data={chartData} options={options}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n","import {PageContainer} from \"../containers/PageContainer\";\r\nimport {FormControl, Grid, InputLabel, MenuItem, Select, Typography} from \"@material-ui/core\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {createStyles, makeStyles, Theme} from \"@material-ui/core/styles\";\r\nimport {Todo} from \"../components/Todo\";\r\nimport {useTodos} from \"../context/TodosContext\";\r\nimport {daysBetween, getCurrentDate} from \"../helpers/utils\";\r\nimport {TodosStatisticChart} from \"../components/TodosStatisticChart\";\r\nimport {TodoInterface} from \"../interfaces/TodoInterface\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        icon: {\r\n            width: 40,\r\n            height: 40,\r\n        },\r\n        formControl: {\r\n            minWidth: 100,\r\n        },\r\n        title: {\r\n            marginRight: theme.spacing(3),\r\n            marginTop: theme.spacing(1),\r\n            color: theme.palette.text.primary\r\n        },\r\n        noTodosMessage: {\r\n            marginTop: theme.spacing(3),\r\n        },\r\n        fab: {\r\n            marginRight: theme.spacing(3),\r\n            marginTop: theme.spacing(0.5),\r\n        },\r\n    }),\r\n);\r\n\r\nexport const DoneTodosPage = () => {\r\n    const classes = useStyles();\r\n    const {todos} = useTodos()\r\n    const [view, setView] = useState<number>(1)\r\n    const [filteredTodos, setFilteredTodos] = useState<TodoInterface[]>([])\r\n\r\n    useEffect(() => {\r\n        setFilteredTodos(view === 1 ? todos.filter(elem => elem.isDone) :\r\n            view === 2 ? todos.filter(elem => elem.isDone &&\r\n                daysBetween(elem.lastModifiedDate, getCurrentDate()) < 7) :\r\n                todos.filter(elem => elem.isDone && elem.lastModifiedDate.split('-')[1] ===\r\n                    (new Date().getMonth() + 1).toString().padStart(2, '0')))\r\n    }, [view, todos])\r\n\r\n    return(\r\n        <PageContainer>\r\n            <Grid container direction={\"row\"}>\r\n                <Typography variant={\"h5\"} className={classes.title}>Завершенные задачи</Typography>\r\n                <FormControl className={classes.formControl}>\r\n                    <InputLabel id=\"selectPeriodLabel\">Период</InputLabel>\r\n                    <Select\r\n                        labelId=\"selectPeriodLabel\"\r\n                        id=\"selectPeriod\"\r\n                        value={view}\r\n                        onChange={(e) => setView(e.target.value as number)}\r\n                    >\r\n                        <MenuItem value={1}>Все</MenuItem>\r\n                        <MenuItem value={2}>За неделю</MenuItem>\r\n                        <MenuItem value={3}>За месяц</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n            <TodosStatisticChart/>\r\n            {filteredTodos.length > 0 ?\r\n                filteredTodos.map((elem, index) => (\r\n                    <Todo key={index} todo={elem}/>\r\n                ))\r\n                :\r\n                <Typography variant={\"h5\"} align={'center'} className={classes.noTodosMessage}>\r\n                    Нет выполненных задач\r\n                </Typography>\r\n            }\r\n        </PageContainer>\r\n    )\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport './App.css';\r\nimport {BrowserRouter as Router} from \"react-router-dom\"\r\nimport {useRoutes} from \"./hooks/useRoutes\";\r\nimport {createMuiTheme} from \"@material-ui/core\";\r\nimport {ThemeProvider} from '@material-ui/core/styles';\r\nimport {TodosProvider} from \"./context/TodosContext\";\r\nimport {TodoInterface} from \"./interfaces/TodoInterface\";\r\n\r\nexport default function App() {\r\n    const routes = useRoutes()\r\n\r\n    const [update, setUpdate] = useState<boolean>(true)\r\n    const [todos, setTodos] = useState<TodoInterface[]>([] as TodoInterface[])\r\n    const [dark, setDark] = useState<boolean>(false)\r\n\r\n    const theme = createMuiTheme({\r\n        palette: {\r\n            type: dark ? \"dark\" : \"light\",\r\n            primary: { main: dark ? '#424242' : '#eeeeee' },\r\n            secondary: { main: dark ? '#4d4d4d' : '#fff' },\r\n            success: { main: '#4791db' },\r\n            error: { main: '#fc2727' }\r\n        },\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (localStorage.getItem('todos'))\r\n            setTodos(JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[])\r\n        if (localStorage.getItem('dark'))\r\n            setDark(localStorage.getItem('dark') === 'true')\r\n        setUpdate(false)\r\n    },[update])\r\n\r\n    const switchTheme = () => {\r\n        localStorage.setItem('dark', dark ? 'false' : 'true')\r\n        setDark(!dark)\r\n    }\r\n\r\n    const addTodo = (todo : TodoInterface) => {\r\n        setTodos((todos) => {\r\n            todos.unshift(todo)\r\n            return todos\r\n        })\r\n        let oldTodos = JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[]\r\n        if (oldTodos) oldTodos.unshift(todo)\r\n        else oldTodos = [todo]\r\n        localStorage.setItem('todos', JSON.stringify(oldTodos))\r\n        setUpdate(true)\r\n    }\r\n\r\n    const removeTodo = (id : number) => {\r\n        setTodos((todos) => {\r\n            todos.splice(todos.findIndex(elem => elem.id === id), 1)\r\n            return todos\r\n        })\r\n\r\n        let oldTodos = JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[]\r\n        oldTodos.splice(oldTodos.findIndex(elem => elem.id === id), 1)\r\n        localStorage.setItem('todos', JSON.stringify(oldTodos))\r\n        setUpdate(true)\r\n    }\r\n\r\n    const setNewTodos = (newTodos : TodoInterface[]) => {\r\n        setTodos(newTodos)\r\n        localStorage.setItem('todos', JSON.stringify(newTodos))\r\n    }\r\n\r\n    const updateTodo = (id : number, todo : TodoInterface) => {\r\n        setTodos((todos) => {\r\n            todos.splice(todos.findIndex(elem => elem.id === id), 1)\r\n            todos.unshift(todo)\r\n            return todos\r\n        })\r\n\r\n        let oldTodos = JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[]\r\n        oldTodos.splice(oldTodos.findIndex(elem => elem.id === id), 1)\r\n        oldTodos.unshift(todo)\r\n        localStorage.setItem('todos', JSON.stringify(oldTodos))\r\n        setUpdate(true)\r\n    }\r\n\r\n    const markTodoAsDone = (id: number) => {\r\n        setTodos((todos) => {\r\n            todos[todos.findIndex(elem => elem.id === id)].isDone = true\r\n            return todos\r\n        })\r\n\r\n        let oldTodos = JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[]\r\n        oldTodos[oldTodos.findIndex(elem => elem.id === id)].isDone = true\r\n        localStorage.setItem('todos', JSON.stringify(oldTodos))\r\n        setUpdate(true)\r\n    }\r\n\r\n    const switchTodoUrgency = (id: number, value: 'very urgent' | 'urgently' | 'medium urgency' | 'do not rush') => {\r\n        setTodos((todos) => {\r\n            todos[todos.findIndex(elem => elem.id === id)].urgency = value\r\n            return todos\r\n        })\r\n\r\n        let oldTodos = JSON.parse(localStorage.getItem('todos') as string) as TodoInterface[]\r\n        oldTodos[oldTodos.findIndex(elem => elem.id === id)].urgency = value\r\n        localStorage.setItem('todos', JSON.stringify(oldTodos))\r\n        setUpdate(true)\r\n    }\r\n\r\n    return (\r\n        <ThemeProvider theme={theme}>\r\n            <Router>\r\n                <TodosProvider value={{\r\n                    todos, dark,\r\n                    switchTheme, addTodo, removeTodo, setNewTodos,\r\n                    updateTodo, markTodoAsDone, switchTodoUrgency}}>\r\n                    {routes}\r\n                </TodosProvider>\r\n          </Router>\r\n        </ThemeProvider>\r\n  );\r\n}\r\n","import {useEffect, Suspense} from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {routes} from \"../helpers/routes\";\r\nimport {TodosPage} from \"../pages/TodosPage\";\r\nimport {DoneTodosPage} from \"../pages/DoneTodosPage\";\r\n\r\nexport const useRoutes = () => {\r\n\r\n    useEffect(() => {\r\n\r\n    },[])\r\n\r\n    return(\r\n        <Switch>\r\n            <Suspense fallback={<div>Some load...</div>}>\r\n                {/*{loading?*/}\r\n                {/*    <div>Loading...</div>*/}\r\n                {/*    :*/}\r\n                {/*    <>*/}\r\n                        <Route path={routes.activeTodos}>\r\n                            <TodosPage/>\r\n                        </Route>\r\n                        <Route path={routes.doneTodos}>\r\n                            <DoneTodosPage/>\r\n                        </Route>\r\n                        <Redirect to={routes.activeTodos}/>\r\n                {/*    </>*/}\r\n                {/*}*/}\r\n            </Suspense>\r\n        </Switch>\r\n    )\r\n}\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}